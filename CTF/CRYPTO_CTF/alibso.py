pkey = 8582435512564229286688465405009040056856016872134514945016805951785759509953023638490767572236748566493023965794194297026085882082781147026501124183913218900918532638964014591302221504335115379744625749001902791287122243760312557423006862735120339132655680911213722073949690947638446354528576541717311700749946777
enc  = 6314597738211377086770535291073179315279171595861180001679392971498929017818237394074266448467963648845725270238638741470530326527225591470945568628357663345362977083408459035746665948779559824189070193446347235731566688204757001867451307179564783577100125355658166518394135392082890798973020986161756145194380336

from Crypto.Util.number import long_to_bytes
import math

flag = (len(str(pkey)) ** 2)

l2 = len(str(pkey)) ** 2

for d in range(int(math.log10(pkey)) + 10):
    exist = math.gcd(l2, 10 ** d)
    if exist:
        rev_mod = pow(l2, -1, 10 ** d)
        m = (((enc - pkey + 10 ** d) % (10 ** d)) * (rev_mod)) % (10 ** d)
        if len(str(pkey)) != len(str(m)):
            continue
        m = str(m)
        print(m)
        for i in range(len(m) - 1, 0, -1):
            if m[i] != '1':
                print(long_to_bytes(int(m[:i + 1])))
                exit()

# CCTF{h0M3_m4De_cRyp70_5ySTeM_1N_CryptoCTF!!!}